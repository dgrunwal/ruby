In Ruby, there are several important built-in object methods that are available for most objects. Here are some of them:

1. **`to_s`**: This method is used to convert an object to a string representation. It's automatically called when you use `puts` to print an object.

    ```ruby
    class MyClass
      def to_s
        "This is my custom object"
      end
    end

    obj = MyClass.new
    puts obj # Output: This is my custom object
    ```

2. **`inspect`**: Similar to `to_s`, but used for a more detailed or developer-oriented representation of an object. It's automatically called when you use `p` to print an object.

    ```ruby
    class MyClass
      def inspect
        "Detailed inspection of my object"
      end
    end

    obj = MyClass.new
    p obj # Output: Detailed inspection of my object
    ```

3. **`to_i`, `to_f`, `to_a`**: These methods are used to convert an object to an integer, float, and array respectively.

    ```ruby
    num_str = "42"
    num = num_str.to_i
    puts num # Output: 42

    float_str = "3.14"
    float_num = float_str.to_f
    puts float_num # Output: 3.14

    str = "hello"
    arr = str.to_a
    p arr # Output: ["h", "e", "l", "l", "o"]
    ```

4. **`respond_to?`**: This method checks if an object responds to a certain method. It returns `true` if the object has the given method, `false` otherwise.

    ```ruby
    str = "hello"
    puts str.respond_to?(:length) # Output: true
    puts str.respond_to?(:foo)    # Output: false
    ```

5. **`nil?`**: This method checks if an object is `nil`.

    ```ruby
    value = nil
    puts value.nil? # Output: true
    ```

6. **`class`**: This method returns the class of an object.

    ```ruby
    str = "hello"
    puts str.class # Output: String
    ```

7. **`methods`**: This method returns an array of symbols representing the public methods of an object.

    ```ruby
    arr = [1, 2, 3]
    puts arr.methods.inspect # Output: [:==, :..., :+, :-, :*, :%, :[], :[]=, :<<, ...]
    ```

These are just a few examples of the many built-in methods available in Ruby objects. Each class in Ruby can define its own set of methods as needed.